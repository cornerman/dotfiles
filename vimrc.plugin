" init
if empty(glob('~/.vim/autoload/plug.vim'))
  !mkdir -p ~/.vim/autoload
  !wget -O ~/.vim/autoload/plug.vim
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

call plug#begin('~/.vim/plug')

" Plug 'jiangxincode/vim-kite'

" rust
Plug 'rust-lang/rust.vim'
" Plug 'racer-rust/vim-racer'

" grammar check
Plug 'vim-scripts/LanguageTool'

" multiple cursors like sublime
Plug 'terryma/vim-multiple-cursors'

" edit pgp file
Plug 'jamessan/vim-gnupg'

" undotree
Plug 'mbbill/undotree'

" as-you-type completion system
" Plug 'shougo/neocomplete.vim'
Plug 'Valloric/YouCompleteMe', { 'do': './install.py --racer-completer --clang-completer --system-libclang'}
Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }

" show syntax/style errors
Plug 'scrooloose/syntastic'

" autoformat code with gq
Plug 'Chiel92/vim-autoformat'

" open files at line with filename:32
Plug 'kopischke/vim-fetch'

" tool for (un-)commenting lines, detects current language
Plug 'tpope/vim-commentary'

" automatically insert 'end' after 'begin' whenhitting enter
Plug 'tpope/vim-endwise'

" motion to the next uppercase letter or _
Plug 'vim-scripts/camelcasemotion'

" switch between source and header file (.c / .h)
Plug 'vim-scripts/a.vim'

" git helper commands and branch info in status line
Plug 'tpope/vim-fugitive'

" visualize git changes in vim
Plug 'airblade/vim-gitgutter'

" automatic tag generation for edited files (slow, but very handy)
" Plug 'xolox/vim-easytags'
" Plug 'xolox/vim-misc'

" Latex
Plug 'LaTeX-Box-Team/LaTeX-Box'

" javascript
" Plug 'marijnh/tern_for_vim', { 'do': 'npm install' }
" Plug 'pangloss/vim-javascript'
" Plug 'othree/yajs'
" Plug 'burnettk/vim-angular'
" Plug 'othree/javascript-libraries-syntax.vim'

" neo4j
" Plug 'neo4j-contrib/cypher-vim-syntax'

" scala
Plug 'derekwyatt/vim-scala'
Plug 'ensime/ensime-vim', { 'do': ':UpdateRemotePlugins' }
let ensime_server_v2=1

" ruby
Plug 'vim-ruby/vim-ruby'

" rails integration
" Plug 'tpope/vim-rails'

" bundle integration: edit Gemfile (:Bopen), syntax highlighting in Gemfile
" (vundle and bundle both use the command :bundle, vundle wins...)
" 'path' and 'tags' are automatically altered to include all gems from
" your bundle. (Generate those tags with gem-ctags!)
" Plug 'tpope/vim-bundler'

" pry integration: ,bp breakpoint and ,ph paste pry history
" Plug 'vim-scripts/pry'

" i3 config syntax
Plug 'PotatoesMaster/i3-vim-syntax'

" vim projectroot
Plug 'airblade/vim-rooter'

" text objects
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-indent' " ai, ii
Plug 'rhysd/vim-textobj-anyblock' " ab, ib
Plug 'thinca/vim-textobj-between' " af<char>, if<char>
Plug 'coderifous/textobj-word-column.vim' " ac, ic
Plug 'PeterRincker/vim-argumentative' " a, ,i, with movements: <>, jumping: []
Plug 'kana/vim-textobj-entire' " ae, ie

" language pack
Plug 'sheerun/vim-polyglot'

" shell commands in vim
Plug 'tpope/vim-eunuch'

" increment/decrement dates with c-x/c-a
Plug 'tpope/vim-speeddating'

" change/add (master) surroundings
Plug 'tpope/vim-surround'

" drag visuals
Plug 'zirrostig/vim-schlepp'

" align text
Plug 'junegunn/vim-easy-align'

" start screen
Plug 'mhinz/vim-startify'

" status bar
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" colorscheme
Plug 'altercation/vim-colors-solarized'

" spelling error in quickfix window
Plug 'vim-scripts/SpellCheck'
Plug 'vim-scripts/ingo-library'

" close all but the current buffer with :Bonly
Plug 'vim-scripts/BufOnly.vim'

" repeat plugin motions with .
Plug 'tpope/vim-repeat'

" indexed search (show index and total number of matches)
Plug 'henrik/vim-indexed-search'

" toggle more than just numbers with gs
Plug 'AndrewRadev/switch.vim'

" use previous window when selecting item in quickfix/location window
Plug 'yssl/QFEnter'

" fzf
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
Plug 'junegunn/fzf.vim'

" autoresize the current window to be larger
Plug 'zhaocai/GoldenView.Vim'

" handle vim swap files, delete older and identical swap files
Plug 'zirrostig/vim-smart-swap'

" syntax highlighting for qml
Plug 'peterhoeg/vim-qml'

" finished
call plug#end()
