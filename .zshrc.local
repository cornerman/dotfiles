# plugins
include ~/projects/zgenom/zgenom.zsh

# check if there's no init script
if ! zgen saved; then
    echo "Creating a zgen save"

    # plugins
    # zgen load zsh-users/zsh-syntax-highlighting
    zgen load zsh-users/zsh-history-substring-search
    zgen load Tarrasch/zsh-bd
    zgen load dottr/dottr
    zgen load rupa/z
    # zgen load oh-my-zsh plugins/scala
    zgen load supercrabtree/k
    zgen load romkatv/powerlevel10k powerlevel10k
    # zgen load b4b4r07/zsh-vimode-visual
    zgen load jeffreytse/zsh-vi-mode
    # zgen load mafredri/zsh-async # for pure-prompt
    # zgen load sindresorhus/pure # prompt

    # save all to init script
    zgen save
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# eval "$(direnv hook zsh)" # load environment vars depending on directory https://direnv.net/docs/hook.html#zsh

# use dottr
fry completion
# fry alias-usage-analysis
fry cd-git-root
fry git-dirty-files-command
# fry docker-host-status
fry cd-tmp
fry git-select-commit
fry interactive-mv
fry mkdir-cd
# fry ncserve
# fry search-select-edit
search-select-edit () {
	results=$(ag --filename --noheading --numbers --column --nobreak --color --hidden -S $@) 
	selected=$(echo -E $results | fzf --ansi --multi --no-sort --tac) 
	[[ -z "$selected" ]] && return 0
	uniquefileswithlines=$(echo -E $selected | tac | sed '$!N; /^\([^:]*\):.*\n\1:.*$/!P; D' | tac | cut -d: -f1-3 | sed s/:.*//g)
	eval "vim $(echo -E $uniquefileswithlines | xargs echo -E -n )"
}
fry smart-cd
fry wait-for-silence
fry extract-archive
# NEO4J_QUERY_JSON_FORMATTER=json_pp fry neo4j-query
fry git-onstage
fry github-clone
fry bell-on-precmd
# fry aws-profile-status
# fry print-expanded-alias

# vim plugin always start with insert mode
ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
# # init fzf with keybindings only after init - otherwise keybindings of fzf overwritten
function zvm_after_init() {
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
}

# fzf now maps ctrl+r for history search, map it to alt+r, so it stays available
bind2maps emacs viins vicmd -- -s '^[r' history-incremental-pattern-search-backward

# ctrl-up and ctrl-down for substring search
bind2maps emacs viins vicmd -- -s '^[[1;5A' history-substring-search-up
bind2maps emacs viins vicmd -- -s '^[[1;5B' history-substring-search-down

# custom bash completion
autoload bashcompinit && bashcompinit
include_all ~/.zsh/bash_completion
include ~/projects/wust2/.zsh_completion
include "$(which aws_bash_completer)"

# include functions and aliases
include_all ~/.shfunctions/

include ~/projects/ubunix/ubunix.sh

# eval $(thefuck --alias)
insertCommitHash () {
    gitlog=$(git log --color=always --pretty=format:'%Cred%h %C(reset)%C(dim)%ad%Creset %s%C(yellow)%d%C(reset) %C(blue)<%an> %Cgreen(%ar)%Creset' --abbrev-commit --date=iso --date-order --date="format:%F %R")
    commits="$(echo -E $gitlog | fzf --no-sort --ansi --height 90% --reverse --preview "git show --color-words \$(echo {} | cut -d ' ' -f1)" | cut -d ' ' -f1 | tr '\n' ' ')"
    [[ -z "$commits" ]] && return 0
    LBUFFER+="$commits"
    local ret=$?
    zle reset-prompt
    return $ret
}
zle -N insertCommitHash
zvm_after_init_commands+=("bindkey '^g' insertCommitHash")

insertAwsInstance () {
  instance=$(aws ec2 describe-instances --query "Reservations[*].Instances[*].{InstanceId:InstanceId,Name:Tags[?Key=='Name']|[0].Value,Environment:Tags[?Key=='environment']|[0].Value,Status:State.Name}" | jq -r '[ flatten[] | select(.Status=="running") ] | map([.InstanceId,.Name,.Environment] | @csv)[]' | sed 's/,,/,"",/g' | sed s/,/\\t/g | column -t | tr -d '"' | fzf | cut -d' ' -f1)
    [[ -z "$instance" ]] && return 0
    LBUFFER+="$instance"
    local ret=$?
    zle reset-prompt
    return $ret
}
zle -N insertAwsInstance
# zvm_after_init_commands+=("bindkey '^' insertAwsInstance")
