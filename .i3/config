####i3 config common

include ~/.i3/config.local

####variables

set $screen1 DP-3-3
set $screen2 eDP-1

# modifier key
set $mod    Mod4
set $barmod Mod3

# terminal definition
set $term alacritty
set $termCd alacritty --working-directory
# set $term urxvt
# set $termCd urxvt -cd

# abbreviation for exec with no-startup-id
set $exec exec
set $nexec exec --no-startup-id
set $exec_always exec_always
set $nexec_always exec_always --no-startup-id

# workspace name variables
set $ws0 0
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"

# font
set $font       xft:Ubuntu 9
set $barfont    xft:Ubuntu,FontAwesome 8

####settings

# font for window titles
font $font

# background colors
set $bgclr_focused      #1f85ca
set $bgclr_active       #00afaf
set $bgclr_urgent       #b64313
# set $bgclr_unfocused    #d2d2bd
set_from_resource $bgclr_unfocused i3wm.bgclr_sep #d2d2bd

# foreground colors
# set $fgclr              #2b2b2b
set_from_resource $fgclr i3wm.fgclr #2b2b2b

# border colors
set $brclr              #000000
# set_from_resource $brclr i3wm.fgclr #2b2b2b

# indicator color
# set $clr_indicator      #d2d2bd
set_from_resource $clr_indicator i3wm.bgclr #d2d2bd

# client background color
set $bgclr_client       #000000

# background bar color
# set $bgclr_bar          #d2d2bd
set_from_resource $bgclr_bar i3wm.bgclr #d2d2bd

# foreground bar color
# set $fgclr_bar          #2b2b2b
set_from_resource $fgclr_bar i3wm.fgclr #2b2b2b

# separator bar color
set $spclr_bar          #ffffff

# background color for window not filling the whole area
client.background       $bgclr_client

# color definition      border    background          text      indicator
client.focused          $brclr    $bgclr_focused      $fgclr    $clr_indicator
client.focused_inactive $brclr    $bgclr_active       $fgclr    $clr_indicator
client.unfocused        $brclr    $bgclr_unfocused    $fgclr    $clr_indicator
client.urgent           $brclr    $bgclr_urgent       $fgclr    $clr_indicator

# default tiling orientation
default_orientation auto

# default workspace layout
workspace_layout tabbed

# border style for new windows/floats
new_window pixel 3
new_float pixel 3
# not sure why, but this is needed, otherwise not borders?
for_window [title=".*"] border pixel 3

# hide outer winder border
hide_edge_borders none

# leave fullscreen mode when popup window opens
popup_during_fullscreen smart

# automatically switch between previous and current ws when moving to ws
workspace_auto_back_and_forth no

# delay removal of urgency hint when focusing urgent window
force_display_urgency_hint 1000 ms

# set focus depending on mouse movement
focus_follows_mouse no

# do not let window steal focus on window activation, set urgency hint instead
focus_on_window_activation urgent

# modifier for moving and resizing floating windows with the mouse
floating_modifier $mod

# set floating size constraints
floating_minimum_size 25 x 15
floating_maximum_size 2500 x 2000

# show marks in title
show_marks yes

####assignments

# workspace to output assignment
workspace $ws0 output $screen1
workspace $ws1 output $screen1
workspace $ws2 output $screen1
workspace $ws3 output $screen1
workspace $ws4 output $screen1
workspace $ws5 output $screen1
workspace $ws6 output $screen1
workspace $ws7 output $screen2
workspace $ws8 output $screen2
workspace $ws9 output $screen2
workspace $ws10 output $screen2
workspace $ws11 output $screen2
workspace $ws12 output $screen2

# program to workspace assignment
assign [class="(?i)gmpc"] $ws10
assign [instance="(?i)ncmpcpp"] $ws10
assign [instance="(?i)ncmpcpp"] $ws10
assign [class="(?i)thunderbird"] $ws11
assign [class="(?i)daily"] $ws11
assign [class="Signal" instance="signal"] $ws12
assign [class="Whatsapp-for-linux" instance="whatsapp-for-linux"] $ws12
assign [class="Slack" instance="slack"] $ws12
assign [class="Keybase" instance="keybase"] $ws12
# spotify changes class/instance on startup...
for_window [class="Spotify" instance="spotify"] move workspace number $ws10

# no stupid popups
# zoom
for_window [class="^\.zoom " title="^\.zoom $"] floating enable, kill
# zoom opened via slack link
for_window [class="^join\?" title="^join\?"] floating enable, kill
# blueman, confirm automatically enable bluetooth
for_window [ class=".blueman-manager-wrapped" title="^$"] kill

# definition of floating windows
for_window [class=".blueman-manager-wrapped" instance=".blueman-manager-wrapped"] floating enable, resize set 1000px 1000px, move position center
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [title="(?i)Password Required"] floating enable
for_window [class="jetbrains-idea-ce" instance="jetbrains-idea-ce" title="^ $"] floating enable
for_window [class="jetbrains-idea-ce" instance="jetbrains-idea-ce" title="^Welcome to IntelliJ IDEA$"] floating enable
for_window [class="jetbrains-idea-ce" instance="jetbrains-idea-ce" title="^[^ ]*$"] floating disable
for_window [class="Eclipse" instance="Eclipse" title="^Eclipse Platform $"] floating enable
for_window [class="Qalculate" instance="qalculate" title="Qalculate!"] floating enable
for_window [title="^Android Emulator - "] floating enable
for_window [class="KeePassXC" ] move scratchpad
for_window [class="1Password" instance="1password"] floating enable
# for_window [class="jetbrains-idea-ce" title="^ $"] floating enable
# for_window [class="jetbrains-idea-ce" title="^Welcome"] floating disable
for_window [floating] move position center

####keybindings

# The right button button over a titlebar kills the window
bindsym button3 kill

# The side buttons move the window around
bindsym button8 move left
bindsym button9 move right

# start a terminal
bindsym $mod+Return $nexec $term
bindsym $mod+Shift+Return $nexec $termCd $(xcwd)

bindsym $mod+v $nexec radio
bindsym $mod+Shift+v $nexec radio clear playlist

# focus with visual hints
bindsym $mod+g $nexec i3-easyfocus -a
bindsym $mod+Shift+g $nexec "i3-easyfocus -a -i | xargs -I{} i3-msg [ con_id = {} ] move workspace current, floating enable, floating disable"
bindsym Shift+Ctrl+g $nexec i3-easyfocus -c

# start dmenu (a program launcher)
bindsym $mod+d $nexec rofi -show combi
bindsym $mod+Shift+d $nexec move_window_to_current

# make screenshot (print)
bindcode 107 $nexec screenshot root
bindcode Shift+107 $nexec screenshot active

# switch keyboard layouts
bindcode 78 $nexec "setxkbmap us"
bindcode Shift+78 $nexec "setxkbmap de neo"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+H move left
bindsym $mod+Shift+J move down
bindsym $mod+Shift+K move up
bindsym $mod+Shift+L move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Read identifier and mark the current window with this identifier
bindsym $mod+m $nexec win_mark mark
bindsym $mod+Shift+m $nexec win_mark unmark

# go to the window with the specified mark
bindsym $mod+n $nexec win_mark goto

# split in horizontal orientation
bindsym $mod+apostrophe split v

# split in vertical orientation
bindsym $mod+colon split h

# kill focused window
bindsym $mod+q kill

# xkill a window
bindsym $mod+Shift+q $nexec "i3-easyfocus -a -i | xargs -I{} i3-msg [con_id = {}] kill"
bindsym $mod+Ctrl+q $nexec "i3-easyfocus -a -w | xargs xkill -id"

# toggle color theme
bindsym --release $mod+c $nexec color_toggle

# move to last split
bindsym $mod+f fullscreen

# global Fullscreen ($mod+Shift+f)
bindsym $mod+Shift+F fullscreen global

# change container layout (stacked, tabbed, default)
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split tabbed splith splitv

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+s focus child

# programs
bindsym $mod+i exec firefox
bindsym $mod+o exec idea-community
bindsym $mod+p exec $term -e htop
bindsym $mod+u exec pavucontrol

# scratchpad
# bindsym $mod+backslash $nexec select-scratchpad.rb -m "^scratched$" -n
bindsym $mod+backslash scratchpad show
bindsym $mod+Shift+backslash move scratchpad
bindsym $mod+BackSpace $nexec select-scratchpad.rb -m "^scratched$"
bindsym $mod+Shift+BackSpace mark --add --toggle scratched; exec i3-msg -t get_marks | grep \"scratched\" && i3-msg move scratchpad || i3-msg floating disable

# goto last urgent window
bindsym $mod+comma [urgent=latest] focus

# focus the previous window
bindsym $mod+period $nexec window_back_forth_msg.rb

# switch between the current and the previously focused one
bindsym $mod+slash workspace back_and_forth
bindsym $mod+Shift+slash move workspace back_and_forth

# toggle focus between visual splits
bindcode $mod+66 $nexec next_split.rb
bindcode $mod+94 $nexec next_split.rb -v

# switch to unfocused output
bindsym $mod+Tab focus output right
bindsym $mod+Shift+Tab move to output right
bindsym $mod+mod1+Tab move workspace to output right

# focus next/prev workspace on output
bindsym $mod+bracketright workspace next_on_output
bindsym $mod+bracketleft workspace prev_on_output

# move con to next/prev workspace on output
bindsym $mod+Shift+bracketright move workspace next_on_output
bindsym $mod+Shift+bracketleft move workspace prev_on_output

# get fresh worspace
# bindsym $mod+p $nexec fresh_workspace.rb
# bindsym $mod+Shift+p $nexec fresh_workspace.rb -r

# switch to workspace
bindcode $mod+49 workspace number $ws0
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod+minus workspace number $ws11
bindsym $mod+equal workspace number $ws12

# move workspace to right column
bindsym $mod+mod1+grave $nexec split_ws.rb -s "$ws0"
bindsym $mod+mod1+1 $nexec split_ws.rb -s "$ws1"
bindsym $mod+mod1+2 $nexec split_ws.rb -s "$ws2"
bindsym $mod+mod1+3 $nexec split_ws.rb -s "$ws3"
bindsym $mod+mod1+4 $nexec split_ws.rb -s "$ws4"
bindsym $mod+mod1+5 $nexec split_ws.rb -s "$ws5"
bindsym $mod+mod1+6 $nexec split_ws.rb -s "$ws6"
bindsym $mod+mod1+7 $nexec split_ws.rb -s "$ws7"
bindsym $mod+mod1+8 $nexec split_ws.rb -s "$ws8"
bindsym $mod+mod1+9 $nexec split_ws.rb -s "$ws9"
bindsym $mod+mod1+0 $nexec split_ws.rb -s "$ws10"
bindsym $mod+mod1+minus $nexec split_ws.rb -s "$ws11"
bindsym $mod+mod1+equal $nexec split_ws.rb -s "$ws12"

bindsym $mod+mod1+Escape $nexec split_ws.rb -r

# move focused container to workspace
bindsym $mod+Shift+grave move workspace number $ws0
bindsym $mod+Shift+1 move workspace number $ws1
bindsym $mod+Shift+2 move workspace number $ws2
bindsym $mod+Shift+3 move workspace number $ws3
bindsym $mod+Shift+4 move workspace number $ws4
bindsym $mod+Shift+5 move workspace number $ws5
bindsym $mod+Shift+6 move workspace number $ws6
bindsym $mod+Shift+7 move workspace number $ws7
bindsym $mod+Shift+8 move workspace number $ws8
bindsym $mod+Shift+9 move workspace number $ws9
bindsym $mod+Shift+0 move workspace number $ws10
bindsym $mod+Shift+minus move workspace number $ws11
bindsym $mod+Shift+equal move workspace number $ws12

# move focused container and focus workspace
bindsym $mod+Ctrl+grave move workspace number $ws0; workspace number $ws0
bindsym $mod+Ctrl+1 move workspace number $ws1; workspace number $ws1
bindsym $mod+Ctrl+2 move workspace number $ws2; workspace number $ws2
bindsym $mod+Ctrl+3 move workspace number $ws3; workspace number $ws3
bindsym $mod+Ctrl+4 move workspace number $ws4; workspace number $ws4
bindsym $mod+Ctrl+5 move workspace number $ws5; workspace number $ws5
bindsym $mod+Ctrl+6 move workspace number $ws6; workspace number $ws6
bindsym $mod+Ctrl+7 move workspace number $ws7; workspace number $ws7
bindsym $mod+Ctrl+8 move workspace number $ws8; workspace number $ws8
bindsym $mod+Ctrl+9 move workspace number $ws9; workspace number $ws9
bindsym $mod+Ctrl+0 move workspace number $ws10; workspace number $ws10
bindsym $mod+Ctrl+minus move workspace number $ws11; workspace number $ws11
bindsym $mod+Ctrl+equal move workspace number $ws12; workspace number $ws12

# bar control
bindsym $mod+b bar mode toggle
bindsym $mod+Shift+b bar hidden_state toggle

####modes

# resize window (you can also use the mouse for that)
set $resize "resize"
mode $resize {
    # These bindings trigger as soon as you enter the resize mode
    # They resize the border in the direction you pressed, e.g.
    # when pressing left, the window is resized so that it has
    # more space on its left
    bindsym h               resize grow left 10 px or 10 ppt
    bindsym Shift+h         resize shrink   left 10 px or 10 ppt

    bindsym j               resize grow down 10 px or 10 ppt
    bindsym Shift+j         resize shrink   down 10 px or 10 ppt

    bindsym k               resize grow up 10 px or 10 ppt
    bindsym Shift+k         resize shrink   up 10 px or 10 ppt

    bindsym l               resize grow right 10 px or 10 ppt
    bindsym Shift+l         resize shrink   right 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left            resize grow left 10 px or 10 ppt
    bindsym Shift+Left      resize shrink   left 10 px or 10 ppt

    bindsym Down            resize grow down 10 px or 10 ppt
    bindsym Shift+Down      resize shrink   down 10 px or 10 ppt

    bindsym Up              resize grow up 10 px or 10 ppt
    bindsym Shift+Up        resize shrink   up 10 px or 10 ppt

    bindsym Right           resize grow right 10 px or 10 ppt
    bindsym Shift+Right     resize shrink   right 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode $resize

# pass-through, no key except escape is handled by i3
set $pass_through "pass-through"
mode $pass_through {
    bindsym $mod+Shift+r mode "default"
}
bindsym $mod+Shift+r mode $pass_through

# i3 session control mode
set $session_ctrl "(e)xit, (r)estart, (l)oad"
mode $session_ctrl {
    bindsym e exit
    bindsym r mode "default"; restart
    bindsym l mode "default"; reload

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+w mode $session_ctrl

# shutdown/reboot/hibernate system mode
set $system_ctrl "(r)eboot, (p)oweroff, (h)ibernate, (s)uspend, (l)ock"
mode $system_ctrl {
    bindsym r mode "default"; $nexec systemctl reboot
    bindsym p mode "default"; $nexec systemctl poweroff
    bindsym h mode "default"; $nexec systemctl hibernate
    bindsym s mode "default"; $nexec systemctl suspend
    bindsym l mode "default"; $nexec slock

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode $system_ctrl

# sound and music control
# set $sound_ctrl "(h) previous, (l) next, (p) pause, (j) down, (k) up, (m) mute, (i) in, (o) out"
# mode $sound_ctrl {
#     bindsym m $nexec vol_ctrl toggle
#     bindsym j $nexec vol_ctrl minus
#     bindsym k $nexec vol_ctrl plus

#     bindsym Shift+m $nexec PULSE_SERVER=appendix vol_ctrl toggle
#     bindsym Shift+j $nexec PULSE_SERVER=appendix vol_ctrl minus
#     bindsym Shift+k $nexec PULSE_SERVER=appendix vol_ctrl plus
#     bindsym h $nexec mpc prev
#     bindsym l $nexec mpc next
#     bindsym p $nexec mpc toggle

#     bindsym i $nexec pa_sink 0
#     bindsym o $nexec pa_sink 1

#     # back to normal: Enter or Escape
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
# }

# bindsym $mod+t mode $sound_ctrl

####bar config

bar {
    id 1
    font $barfont
    status_command py3status -n 5
    modifier $barmod
    mode dock
    hidden_state hide
    position top
    bindsym button4 nop
    bindsym button5 nop
    colors {
        background $bgclr_bar
        statusline $fgclr_bar
        separator  $spclr_bar

        #Colors             border  background          text
        focused_workspace   $brclr  $bgclr_focused      $fgclr
        active_workspace    $brclr  $bgclr_active       $fgclr
        inactive_workspace  $brclr  $bgclr_unfocused    $fgclr
        urgent_workspace    $brclr  $bgclr_urgent       $fgclr
    }
}

